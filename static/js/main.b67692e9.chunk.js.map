{"version":3,"sources":["utils/index.js","constants/index.js","components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","App.js","reportWebVitals.js","index.js"],"names":["getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","fields","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","37","38","39","40","OppositeDirection","Delta","Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","map","row","column","uuidv4","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","delta","newPosition","position","isCollision","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b67692e9.chunk.js","sourcesContent":["export const getFoodPosition = (fieldSize, excludes) => {\n  while (true) {\n    const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1\n    const conflict = excludes.some((item) => item.x === x && item.y === y)\n\n    if (!conflict) {\n      return { x, y }\n    }\n  }\n}\n\nexport const initFields = (fieldSize, snake) => {\n  const fields = []\n  for (let i = 0; i < fieldSize; i++) {\n    const cols = new Array(fieldSize).fill('')\n    fields.push(cols)\n  }\n  fields[snake.y][snake.x] = 'snake'\n\n  const food = getFoodPosition(fieldSize, [snake])\n  fields[food.y][food.x] = 'food'\n\n  return fields\n}\n","import { initFields } from '../utils'\n\nconst fieldSize = 35\nexport const initialPosition = { x: 17, y: 17 }\nexport const initialValues = initFields(fieldSize, initialPosition)\nexport const defaultInterval = 100\nexport const defaultDifficulty = 3\n\nexport const Difficulty = [1000, 500, 100, 50, 10]\n\nexport const GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover',\n})\n\nexport const Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down',\n})\n\nexport const DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n})\n\nexport const OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up',\n})\n\nexport const Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n})\n","import React from 'react'\nimport { defaultDifficulty, Difficulty } from '../constants'\n\nconst Navigation = ({\n  length,\n  difficulty = defaultDifficulty,\n  onChangeDifficulty,\n}) => {\n  const upVisibility = difficulty < Difficulty.length ? '' : 'is-hidden'\n  const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n  const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Length: </span>\n        <div className=\"navigation-item-number-container\">\n          <div className=\"num-board\">{length}</div>\n        </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n            <div\n              className={`difficulty-button difficulty-up ${upVisibility}`}\n              onClick={onUpDifficulty}\n            ></div>\n            <div\n              className={`difficulty-button difficulty-down ${downVisibility}`}\n              onClick={onDownDifficulty}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Field = ({ fields }) => {\n  return (\n    <div className=\"field\">\n      {fields.map((row) => {\n        return row.map((column) => {\n          return <div className={`dots ${column}`} key={uuidv4()}></div>\n        })\n      })}\n    </div>\n  )\n}\n\nexport default Field\n","import React from 'react'\nimport { GameStatus } from '../constants'\n\nconst Button = ({ status, onStart, onStop, onRestart }) => {\n  return (\n    <div className=\"button\">\n      {status === GameStatus.gameover && (\n        <button className=\"btn btn-gameover\" onClick={onRestart}>\n          gameover\n        </button>\n      )}\n      {status === GameStatus.init && (\n        <button className=\"btn btn-init\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === GameStatus.suspended && (\n        <button className=\"btn btn-suspended\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === GameStatus.playing && (\n        <button className=\"btn btn-playing\" onClick={onStop}>\n          stop\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faArrowLeft,\n  faArrowUp,\n  faArrowDown,\n  faArrowRight,\n} from '@fortawesome/free-solid-svg-icons'\nimport { Direction } from '../constants'\n\nconst ManipulationPanel = ({ onChange }) => {\n  const onUp = () => onChange(Direction.up)\n  const onRight = () => onChange(Direction.right)\n  const onLeft = () => onChange(Direction.left)\n  const onDown = () => onChange(Direction.down)\n  return (\n    <div className=\"manipulation-panel\">\n      <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </button>\n      <div>\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n          <FontAwesomeIcon icon={faArrowUp} />\n        </button>\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n          <FontAwesomeIcon icon={faArrowDown} />\n        </button>\n      </div>\n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n        <FontAwesomeIcon icon={faArrowRight} />\n      </button>\n    </div>\n  )\n}\n\nexport default ManipulationPanel\n","import React, { useCallback, useEffect, useState } from 'react'\nimport Navigation from './components/Navigation'\nimport Field from './components/Field'\nimport Button from './components/Button'\nimport ManipulationPanel from './components/ManipulationPanel'\nimport {\n  defaultInterval,\n  defaultDifficulty,\n  Delta,\n  Difficulty,\n  Direction,\n  DirectionKeyCodeMap,\n  GameStatus,\n  OppositeDirection,\n  initialPosition,\n  initialValues,\n} from './constants'\nimport { initFields, getFoodPosition } from './utils'\n\nlet timer = undefined\n\nconst unsubscribe = () => {\n  if (!timer) {\n    return\n  }\n  clearInterval(timer)\n}\n\nconst isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true\n  }\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true\n  }\n  return false\n}\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues)\n  const [body, setBody] = useState([])\n  const [status, setStatus] = useState(GameStatus.init)\n  const [direction, setDirection] = useState(Direction.up)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n  const [tick, setTick] = useState(0)\n\n  useEffect(() => {\n    setBody([initialPosition])\n\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1)\n    }, interval)\n    return unsubscribe\n  }, [difficulty])\n\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n      return\n    }\n    const canContinue = handleMoving()\n    if (!canContinue) {\n      setStatus(GameStatus.gameover)\n    }\n  }, [tick])\n\n  const onStart = () => setStatus(GameStatus.playing)\n\n  const onStop = () => setStatus(GameStatus.suspended)\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1)\n    }, defaultInterval)\n    setDirection(Direction.up)\n    setStatus(GameStatus.init)\n    setBody([initialPosition])\n    setFields(initFields(35, initialPosition))\n  }\n\n  const onChangeDirection = useCallback(\n    (newDirection) => {\n      if (status !== GameStatus.playing) {\n        return direction\n      }\n      if (OppositeDirection[direction] === newDirection) {\n        return\n      }\n      setDirection(newDirection)\n    },\n    [direction, status]\n  )\n\n  const onChangeDifficulty = useCallback(\n    (difficulty) => {\n      if (status !== GameStatus.init) {\n        return\n      }\n      if (difficulty < 1 || difficulty > Difficulty.length) {\n        return\n      }\n      setDifficulty(difficulty)\n    },\n    [status, difficulty]\n  )\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode]\n      if (!newDirection) {\n        return\n      }\n      onChangeDirection(newDirection)\n    }\n    document.addEventListener('keydown', handleKeyDown)\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [onChangeDirection])\n\n  const handleMoving = () => {\n    const { x, y } = body[0]\n    const delta = Delta[direction]\n    const newPosition = { x: x + delta.x, y: y + delta.y }\n    if (\n      isCollision(fields.length, newPosition) ||\n      isEatingMyself(fields, newPosition)\n    ) {\n      return false\n    }\n    const newBody = [...body]\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation\n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStop={onStop}\n          onStart={onStart}\n          onRestart={onRestart}\n        />\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}